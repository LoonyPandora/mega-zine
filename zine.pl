#!/usr/bin/perl -wT

###############################################################################
# zine.pl
# =============================================================================
#
# Version:    1.0
# Released:   15th August 2008
#
# Copyright (C) 2008 James Aitken <http://www.loonypandora.com>
#
# Displays the main zine page, reads the archives generated by cron.pl
#
###############################################################################

#use CGI::Carp qw(fatalsToBrowser);
print "Content-Type: text/html\n\n";

use Time::Local;

my @numbers				= ('zero','one','two','three','four','five');

# all months are zero indexed arrays, but humans aren't... so make January month 1.
my @months 				= ('','January','February','March','April','May','June','July','August','September','October','November','December');
my @short_months	= ('','Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec');
my @days					= ('Sun','Mon','Tue','Wed','Thu','Fri','Sat');

my $feedDir		= "/home/u3437100/public_html/mega-zine/feeds";
my $themeDir	= "/home/u3437100/public_html/mega-zine/themes";


#---- End of Settings ---------------------------------------------------------


&readform;
&getViewDate;
&checkTheme;
&readLetters;
&genDateSelect;
&htmlTemplate;


#------------------------------------------------------------------------------
# Prints the visible HTML. Very basic 'template' system
#------------------------------------------------------------------------------
sub htmlTemplate {

print qq~<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<title>Mega-Zine</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<script type="text/javascript" src="/utils.js"></script>
	<link rel="stylesheet" href="/style.css" type="text/css" />
	<link rel="alternate" type="application/rss+xml" title="Teletext Mega-zine" href="http://feeds.teletext.co.uk/entertainment/mega-zine" />
</head>
<body>

<div class="container">
	$themeHTML
	<div class="header">
		<span class="zinePageNum">P142</span>
		<span class="teletext"><a href="http://www.vegetablerevolution.com/">The Vegetable Revolution</a> + <a href="http://www.teletext.co.uk/entertainmentchat/mega-zine/default.aspx">Teletext.co.uk</a></span>
		<span class="date">$days[$viewWDay], $GET{'day'} $short_months[$GET{'month'}] $GET{'year'}</span>
		
		<img src="/themes/mega-zine-text.png" height="88" style="float: left;" alt="Mega-Zine" />
		$themeImage	
	</div>

	<div id="scrollbox">
		<div id="content">
		$letterOutput
		</div>
	</div>
	
	<hr />

	<span class="letternav">
		<a href="javascript:ScrollArrow('left');">&laquo;</a>
		<span id="pages">
			<a id="page-one" href="#one" class="active" onclick="ScrollPage('one'); return false">1</a>
			<a id="page-two" href="#two" onclick="ScrollPage('two', 'scroller'); return false">2</a>
			<a id="page-three" href="#three" onclick="ScrollPage('three'); return false">3</a>
			<a id="page-four" href="#four" onclick="ScrollPage('four'); return false">4</a>
			<a id="page-five" href="#five" onclick="ScrollPage('five'); return false">5</a> 
		</span>
		<a href="javascript:ScrollArrow('right');">&raquo;</a>
	</span>

	<div class="footer">
		<span class="prev-letters">$prevDay</span>
		<span class="next-letters">$nextDay</span>
		<span class="date-select">&nbsp;
			<select id="date">
				<option value="">Select a date...</option>
				$dateSelect
			</select>
			<input type="submit" value="Go" onclick="changeDate(); return false"/>
		</span>

		<p>Comrade, join <a href="http://www.vegetablerevolution.com">The Vegetable Revolution</a> and show your patriotism. To get in the 'Zine, Text 07624 809 881 (normal SMS cost), write to Mega-Zine, PO Box 32549, London W4 5TS, or email <a href="mailto:mega-zine\@teletext.co.uk">mega-zine\@teletext.co.uk</a>. Please remember to include your "name"</p>
	</div>
	
	<div class="sosumi">
		<p>Mega-Zine is a trademark of Teletext Ltd. The content on this site is provided be the Mega-Zine RSS feed, and is used with persmission. Any similarity to persons living or dead is purely coincidental.</p>
	</div>

</div>

<!-- Google Analytics -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-263289-7");
pageTracker._trackPageview();
</script>
<!-- / Google Analytics -->

</body>
</html>~

}


#------------------------------------------------------------------------------
# Reads the letter file, and generates the HTML output for printing
#------------------------------------------------------------------------------
sub readLetters {
	open(LETTERS, "$letterFile") or die "Cannot open file '$letterFile' $!";;
		my @letters = <LETTERS>;
	close(LETTERS);
	
	for ($i = 0; $i <= $#letters; $i++) {
		(undef, $thread, undef, $title, undef, undef, $message) = split(/\|/, $letters[$i]);
	
		# Remove BBCode, and convert back to HTML
		$message =~ s/\[color=#(ff0000|0000ff|993366)\]//sig;
		$message =~ s/\[\/color\]//sig;
		$message =~ s/\[(b|i)\]/<$1>/sig;
		$message =~ s/\[\/(b|i)\]/<\/$1>/sig;

		our $letterOutput .=  qq~
			<div class="section" id="$numbers[$i+1]">
				<h1><a href="http://www.vegetablerevolution.com/forum/topic/$thread">$title</a></h1>
				<p>$message</p>
			</div>
		~;
	}
}


#------------------------------------------------------------------------------
# Gets the list of old feeds, and generates an HTML date selector
#------------------------------------------------------------------------------
sub genDateSelect {

	opendir(DIR, "$feedDir") or die "Cannot open directory '$feedDir' $!";
		my @contents = readdir(DIR);
		@contents = sort(@contents);
	closedir(DIR);
	
	my $x = 0;
	foreach my $file (@contents) {
		my ($name, undef) = split(/\./, $file);
	
		my ($year, $month, $day) = split(/-/, $name);
		my $ordinalDay = &ordinal($day);
	
		unless ($file =~ m/^\./) {
			our $dateSelect	.= qq~<option value="$year/$month/$day">$ordinalDay $months[$month] $year</option>~;
		}
	
		if ($name eq "$GET{'year'}-$GET{'month'}-$GET{'day'}") {	
	
			if ($contents[$x-1] =~ /zine/) { our $prevDay = qq~<a href="/$contents[$x-1]">&laquo; Older Letters</a>~; }
			else { our $prevDay = "No Older Letters"; }
			if ($contents[$x+1] =~ /zine/) { our $nextDay = qq~<a href="/$contents[$x+1]">Newer Letters &raquo;</a>~; }
			else { our $nextDay = "No Newer Letters"; }
			
			$prevDay =~ s/\-/\//sig;			$prevDay =~ s/\.zine//sig;
			$nextDay =~ s/\-/\//sig;		$nextDay =~ s/\.zine//sig;		
		}
		$x++;
	}

}


#------------------------------------------------------------------------------
# Sanitizes the Query String, and sets sane values for the current date
#------------------------------------------------------------------------------
sub readform {
	$ENV{QUERY_STRING} =~ s#/|\\##sig;
	
	my @pairs = split(/;/, $ENV{QUERY_STRING});
	
	foreach my $pair (@pairs) {
		my ($name, $value) = split(/=/, $pair);

		# values ONLY have digits, names ONLY have words (no spaces)
		$name  =~ s/\W+//sig;
		$value =~ s/\D+//sig;
		
		$GET{$name} = $value;
	}

	if (!-e "$feedDir/$GET{'year'}-$GET{'month'}-$GET{'day'}.zine") {
		opendir(DIR, "$feedDir") or die "Cannot open directory '$feedDir' $!";
			my @contents = readdir(DIR);
			@contents = sort(@contents);
		closedir(DIR);
		
		$contents[$#contents] =~ s/\.zine//;
		($GET{'year'}, $GET{'month'}, $GET{'day'}) = split(/-/, $contents[$#contents]);		
	}

	our $letterFile = "$feedDir/$GET{'year'}-$GET{'month'}-$GET{'day'}.zine";
}


#------------------------------------------------------------------------------
# Is it a theme day, Sat Showcase, or Sunday Classic?
#------------------------------------------------------------------------------
sub checkTheme {

	open(THEME, "$themeDir/themes.txt") or die "Cannot open file '$letterFile' $!";;
		%themes = map /(.*)\t(.*)/, <THEME>;	
	close(THEME);

	my ($text, $image) = split(/\|/, $themes{"$GET{'year'}-$GET{'month'}-$GET{'day'}"});
	if (!$image) { $image = "davord.png"; $text = "Davord"; }
	else { our $themeHTML	= qq~<div class="theme-message">$text</div>~; }
	
	our $themeImage	= qq~<img src="/themes/$image" height="88" style="float: right;" alt="$text" />~;

}


#------------------------------------------------------------------------------
# Gives you the correct ordinal ('1st' '4th' etc) for any number
#------------------------------------------------------------------------------
sub ordinal {
		$_[0] =~ /^(?:\d+|\d[,\d]+\d+)$/ or return $_[0];
		return "$_[0]nd" if $_[0] =~ /(?<!1)2$/;
		return "$_[0]rd" if $_[0] =~ /(?<!1)3$/;
		return "$_[0]st" if $_[0] =~ /(?<!1)1$/;
		return "$_[0]th";
}


#------------------------------------------------------------------------------
# Converts RSS formatted time to a unix timestamp
#------------------------------------------------------------------------------
sub stringtotime {
	my ($word_day, $mantissa) = split(m~,\ ~, $_[0]);
	my ($num_mday, $word_month, $num_year, $word_time, undef) = split(m~\ ~, $mantissa);
	my ($num_hour, $num_min, $num_sec) = split(m~:~, $word_time);

	my $i = 0;
	foreach my $month (@short_months) {
		if ($short_months[$i] eq "$word_month") {
			my $num_month = $i;
			return (timegm($num_sec, $num_min, $num_hour, $num_mday, $num_month, $num_year));
    }
		$i++;
	}

}


#------------------------------------------------------------------------------
# Gets the week day for the date you are looking at (for day name)
#------------------------------------------------------------------------------
sub getViewDate {
	# timegm is zero indexed, but query string month is NOT, so do a bit of math to get the date right	
	my $viewDate = &stringtotime("Mon, $GET{'day'} $short_months[$GET{'month'}-1] $GET{'year'} 12:00:00 GMT");
	our (undef, undef, undef , undef, undef, undef, $viewWDay, undef, undef) = gmtime($viewDate);
}

1;